service: get-my-secret

frameworkVersion: '3'

plugins:
  - serverless-webpack

custom:
  SecretsTable:
    name: !Ref SecretsTable
    arn: !GetAtt SecretsTable.Arn
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true # enable auto-packing of external modules

provider:
  name: aws
  runtime: nodejs16.x
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'sa-east-1'}
  environment:
    SECRETS_TABLE_NAME: ${self:custom.SecretsTable.name}
  iam:
    role:
      statements:
        - ${file(config/iam/SecretsTableIAM.yml):SecretsTableIAM}

resources:
  Resources:
    SecretsTable: ${file(config/resources/SecretsTable.yml):SecretsTable}

functions:
  # API
  storeSecret:
    handler: src/handlers/storeSecret.handler
    events:
      - http:
          method: post
          path: /secret
          cors: true
  getSecret:
    handler: src/handlers/getSecret.handler
    events:
      - http:
          method: patch
          path: /secret/{uuid}/{encryptionKey}
          cors: true
  destroySecret:
    handler: src/handlers/destroySecret.handler
    events:
      - http:
          method: delete
          path: /secret/{uuid}
          cors: true
  hasPassword:
    handler: src/handlers/hasPassword.handler
    events:
      - http:
          method: get
          path: /secret/{uuid}
          cors: true
  # Sheduling Task
  destroyExpiredSecret:
    handler: src/handlers/destroyExpiredSecret.handler
    events:
      - schedule:
          rate: rate(1 minute)
          enabled: true
